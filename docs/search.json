[
  {
    "objectID": "lecture2.html#start-by-installing-r",
    "href": "lecture2.html#start-by-installing-r",
    "title": "Lecture 2",
    "section": "Start by Installing R:",
    "text": "Start by Installing R:\nPlease attempt this prior to the start of lecture. If you successfully install R and RStudio without any issues, feel free to arrive at 9:15am on Thursday to allow us time to help other students\nTo install R, you should install both R and RStudio. To download and install R, you should click the following:\nDownload and Install R\n\nOnce you get to this website, click the “Download R for macOS” or “Download R for Windows” depending on your machine.\nTo get the R Studio interface, you can click on the same link as above and then click “Download RStudio Desktop.”\n\nIf you would like step by step instructions, you can do so here.\nPlease tell the teaching team if you need assistance!"
  },
  {
    "objectID": "lecture2.html#recap",
    "href": "lecture2.html#recap",
    "title": "Lecture 2",
    "section": "Recap:",
    "text": "Recap:\nWho can tell me what the essential functions do?\n\nfilter()\n\n\n\narrange()\n\n\n\n\nselect()\n\n\n\n\nmutate()\n\n\n\n\nsummarise()\n\n\n\n\ngroup_by()\n\nI highly recommend reading Hadley Wickham’s chapter that has descriptions and examples of key functions.\n\nYou can do 80% of data exploration and analysis using these.\n\nOften, data analysis is knowing what the right question to ask is. Summary statistics are very powerful.\n\n\nHere is a cheatsheet I highly recommend."
  },
  {
    "objectID": "lecture2.html#goals-for-today",
    "href": "lecture2.html#goals-for-today",
    "title": "Lecture 2",
    "section": "Goals for today:",
    "text": "Goals for today:\n\nReinforce principles of data cleaning and dplyr\nLearn about tidy data\nBuild plots and understand key points of data visualization\nReplicate a data visualization produced in real reports"
  },
  {
    "objectID": "lecture2.html#tidy-data",
    "href": "lecture2.html#tidy-data",
    "title": "Lecture 2",
    "section": "Tidy data:",
    "text": "Tidy data:\n\n\nA dataset is tidy if it satisfies the following conditions:\n\neach variable forms a column\neach observation forms a row\neach cell is a single measurement\nlong format"
  },
  {
    "objectID": "lecture2.html#untidy-data",
    "href": "lecture2.html#untidy-data",
    "title": "Lecture 2",
    "section": "Untidy data:",
    "text": "Untidy data:\n\nL. Bartram, M. Correll and M. Tory, “Untidy Data: The Unreasonable Effectiveness of Tables” in IEEE Transactions on Visualization & Computer Graphics, vol. 28, no. 01, pp. 686-696, Jan. 2022, doi: 10.1109/TVCG.2021.3114830"
  },
  {
    "objectID": "lecture2.html#effective-visualization-is-important",
    "href": "lecture2.html#effective-visualization-is-important",
    "title": "Lecture 2",
    "section": "Effective visualization is important!",
    "text": "Effective visualization is important!\n\nLet’s look at some examples of unique data visualizations here.\nData is only as useful as it is understood.\n\nPoor visualization can mislead or confuse: a good plot tells a story, a bad plot hides the truth.\n\n\nPrinciples of Effective Data Visualization:\n\nClear: not too busy, appropriate labels\nAccurate: don’t truncate axes, don’t mislead color gradients\nEfficient: convey info quickly and remove non-essential components\nConsistent: line chart for trends, bar charts for comparison\nAccessibility: make sure easy to interpret"
  },
  {
    "objectID": "lecture2.html#lots-of-ways-to-plot-in-r",
    "href": "lecture2.html#lots-of-ways-to-plot-in-r",
    "title": "Lecture 2",
    "section": "Lots of ways to plot in R:",
    "text": "Lots of ways to plot in R:\n\nThere are many different ways to plot in R\n\nYou have already seen plots in Base R\n\nThere are also lots of many different graphs you can make\n\nFor a directory, you could see The R Graph Gallery\n\n\nWe will focus on ggplot2:\n\nggplot2 documentation"
  },
  {
    "objectID": "lecture2.html#how-to-structure-a-ggplot",
    "href": "lecture2.html#how-to-structure-a-ggplot",
    "title": "Lecture 2",
    "section": "How to structure a ggplot:",
    "text": "How to structure a ggplot:\n\n\n The first 3 are essential, the rest are very helpful!\n\nImagine that you were describing a graph to someone. How would you do it?\n\nData to be visualized\nGeometric objects that appear on the plot\nAesthetic mappings from data to visual components\nStatistics transform data on the way to visualization\nCoordinates organize location of geometric objects\nScales define the range of values for aesthetics\nFacets group into subplots"
  },
  {
    "objectID": "lecture2.html#ggplot",
    "href": "lecture2.html#ggplot",
    "title": "Lecture 2",
    "section": "ggplot",
    "text": "ggplot\nFor today and most of your time, you will just need the ggplot2 package from the tidyverse mega-package.\n\nConsistent with Grammar of Graphics\nFlexible\nLayering and theme customization\nCommunity"
  },
  {
    "objectID": "lecture2.html#general-formula",
    "href": "lecture2.html#general-formula",
    "title": "Lecture 2",
    "section": "General Formula:",
    "text": "General Formula:\n\n\n\nggplot(data = &lt;DATA&gt;,\n    # can also specify aes within a geom function\n    aes(x=&lt;X&gt;, y=&lt;Y&gt;)) +\n    &lt;COORDINATE_FUNCTION&gt; +\n    &lt;FACET_FUNCTION&gt; +\n    &lt;SCALE_FUNCTION&gt; +\n    &lt;THEME_FUNCTION&gt;\n\n\n\nData: the data you want to visualize\nLayers: geom_ and stat_ : the geometric shapes and statistical summaries representing the data\nAesthetics: aes(): aesthetic mappings of the geometric and statistical objects\nScales: scale_: map between the aesthetic dimensions\nCoordinate system: coord_: maps data into the plane of data rectangle\nFacets: facet_ arrangement of the data into a grid of plots\nVisual themes: theme() and theme_: the overall visual defaults of a plot"
  },
  {
    "objectID": "lecture2.html#start-with-data",
    "href": "lecture2.html#start-with-data",
    "title": "Lecture 2",
    "section": "Start with data:",
    "text": "Start with data:\nLoad in data and install packages.\nLet’s look at data on International Agricultural Productivity.\n\nlibrary(tidyverse)\n\n# load in the data:\ntfp &lt;- read.csv('https://ers.usda.gov/sites/default/files/_laserfiche/DataFiles/51270/AgTFPInternational2022_long.csv?v=1647')\n\n# explore the data:\nhead(tfp)\n\n  Order FAO ISO3 Country.territory Region   Sub.Region Inc.I Year     Attribute\n1     1 159  NGA           Nigeria    SSA SSA, Nigeria  MI-L 1961     TFP_Index\n2     1 159  NGA           Nigeria    SSA SSA, Nigeria  MI-L 1961  Outall_Index\n3     1 159  NGA           Nigeria    SSA SSA, Nigeria  MI-L 1961   Input_Index\n4     1 159  NGA           Nigeria    SSA SSA, Nigeria  MI-L 1961    Land_Index\n5     1 159  NGA           Nigeria    SSA SSA, Nigeria  MI-L 1961   Labor_Index\n6     1 159  NGA           Nigeria    SSA SSA, Nigeria  MI-L 1961 Capital_Index\n    Value\n1 88.4780\n2 19.2773\n3 21.7877\n4 40.3669\n5 51.4274\n6  8.6992\n\ntail(tfp)\n\n       Order FAO ISO3 Country.territory                  Region Sub.Region\n259803   242  NA                        G20 (19 countries 2021)           \n259804   242  NA                        G20 (19 countries 2021)           \n259805   242  NA                        G20 (19 countries 2021)           \n259806   242  NA                        G20 (19 countries 2021)           \n259807   242  NA                        G20 (19 countries 2021)           \n259808   242  NA                        G20 (19 countries 2021)           \n       Inc.I Year    Attribute        Value\n259803       2022    Capital_Q    4689431.5\n259804       2022 Fertilizer_Q  163841571.5\n259805       2022       Feed_Q 3482819729.3\n259806       2022   Cropland_Q     868541.5\n259807       2022    Pasture_Q    1645427.0\n259808       2022  IrrigArea_Q     225722.2"
  },
  {
    "objectID": "lecture2.html#creating-the-data",
    "href": "lecture2.html#creating-the-data",
    "title": "Lecture 2",
    "section": "Creating the data",
    "text": "Creating the data\nLet’s say that we want to plot total output over time across the globe. We look at the code book and find that the Output Total Variable is the gross Value of agricultural output from crops, livestock and aquaculture, $1000 at constant 2015 prices.\n\n# get just total output:\noutput &lt;- tfp %&gt;% filter(Attribute == \"Outall_Q\")\n\n# look and see what regions we have:\ntable(output$Region)\n\n\n                                      ASIA \n                                      2108 \n                               ASIA, Total \n                                        62 \n                           ASIA, Total LDC \n                                        62 \n                                     China \n                                        62 \n                                     CWANA \n                                      1951 \n                              CWANA, Total \n                                        62 \n                      Developing Countries \n                                        62 \n  EU14 (includes E&W Germany, excludes UK) \n                                        62 \nEU27 (27 countries as of 2021 excludes UK) \n                                        62 \n                                    EUROPE \n                                      2651 \n                             EUROPE, Total \n                                        62 \n                       Former Soviet Union \n                                        62 \n                   G20 (19 countries 2021) \n                                        62 \n                               High income \n                                        62 \n                  Industrialized Countries \n                                        62 \n                                       LAC \n                                      2108 \n                                LAC, Total \n                                        62 \n                                Low income \n                                        62 \n                       Lower-middle income \n                                        62 \n                             NORTH AMERICA \n                                       186 \n                                   OCEANIA \n                                       186 \n            OECD (38 countries as of 2021) \n                                        62 \n                                       SSA \n                                      3432 \n                                SSA, Total \n                                        62 \n                      Transition countries \n                                        62 \n                       Upper-middle income \n                                        62 \n      Upper-middle income, excluding China \n                                        62 \n                                     World \n                                        62"
  },
  {
    "objectID": "lecture2.html#creating-the-data-1",
    "href": "lecture2.html#creating-the-data-1",
    "title": "Lecture 2",
    "section": "Creating the data:",
    "text": "Creating the data:\nThis is why inspecting your data is important–we have separate observations for different countries, as well as subtotals by region. If we just summarized, then we would over count! Let’s restrict to just the world:\n\nworld_output &lt;- output %&gt;% \n  # restrict just to the world\n  filter(Region == \"World\") %&gt;%\n  # convert to billions (we are currently in thousands)\n  mutate(value_billions = Value/1000000) %&gt;%\n  # select just the variables that we need:\n  select(Year, value_billions)\n\n\n# preview the data:\nhead(world_output)\n\n  Year value_billions\n1 1961       1081.469\n2 1962       1116.667\n3 1963       1145.179\n4 1964       1184.011\n5 1965       1209.248\n6 1966       1253.067"
  },
  {
    "objectID": "lecture2.html#starting-the-plot",
    "href": "lecture2.html#starting-the-plot",
    "title": "Lecture 2",
    "section": "Starting the plot:",
    "text": "Starting the plot:\nLet’s start making the plot:\n\n# start by just specifying the data \nggplot(data = world_output)"
  },
  {
    "objectID": "lecture2.html#making-the-plot",
    "href": "lecture2.html#making-the-plot",
    "title": "Lecture 2",
    "section": "Making the plot:",
    "text": "Making the plot:\nLet’s map the data to the plot:\n\nMapping is a set of instructions on how the data are mapped onto aesthetic attributes of geometric objects. It translates tidy data to the graphics system.\nA mapping can be made by using the aes() function to make pairs of graphical attributes and parts of the data.\n\n\n# start by just specifying the data \nggplot(data = world_output, aes(x=Year, y = value_billions))"
  },
  {
    "objectID": "lecture2.html#most-commonly-used-geoms",
    "href": "lecture2.html#most-commonly-used-geoms",
    "title": "Lecture 2",
    "section": "Most commonly used geoms:",
    "text": "Most commonly used geoms:\n\ngeom_bar() and geom_col(): bar charts\ngeom_boxplot(): box and whisker plots\ngeom_density(): density estimates\ngeom_jitter(): jitter points\ngeom_line(): line plots\ngeom_point(): scatter plots\n\nTo know more about layers, look at this."
  },
  {
    "objectID": "lecture2.html#add-layers",
    "href": "lecture2.html#add-layers",
    "title": "Lecture 2",
    "section": "Add Layers:",
    "text": "Add Layers:\nThis is the essential part of making the data appear on the chart:\n\n# start by just specifying the data \nggplot(data = world_output, aes(x=Year, y = value_billions)) + \n  geom_point() # add points"
  },
  {
    "objectID": "lecture2.html#add-layers-1",
    "href": "lecture2.html#add-layers-1",
    "title": "Lecture 2",
    "section": "Add Layers:",
    "text": "Add Layers:\nYou can add multiple layers to the same chart\n\n# start by just specifying the data \nggplot(data = world_output, aes(x=Year, y = value_billions)) + \n  geom_point() + # add points\n  geom_line() # add a line"
  },
  {
    "objectID": "lecture2.html#add-labels",
    "href": "lecture2.html#add-labels",
    "title": "Lecture 2",
    "section": "Add labels:",
    "text": "Add labels:\n\n# start by just specifying the data \nggplot(data = world_output, aes(x=Year, y = value_billions)) + \n  geom_point() + # add points\n  geom_line() + # add a line\n  theme_classic() + # add a theme\n  labs(\n  x = \"Year\",\n  y = \"Amount (Billions USD, 2015 terms)\",\n  title = \"Global TFP Output Over Time\",\n  caption = \"Source: \"\n  ) # add labels"
  },
  {
    "objectID": "lecture2.html#another-graph",
    "href": "lecture2.html#another-graph",
    "title": "Lecture 2",
    "section": "Another graph:",
    "text": "Another graph:\nLet’s try to make a graph the countries of Central America, and keep all of the attributes:\n\n# get a dataset of Cetnral America\ncentral_america &lt;- tfp |&gt;\n  # restrict to central america:\n  filter(Sub.Region == \"Central America\") |&gt;\n  # get rid of the subtotal:\n  filter(Country.territory != \"Central America\") |&gt;\n  # select the attributes we want:\n  filter(Attribute %in% c(\"Land_Q\", \"Labor_Q\", \"Capital_Q\")) |&gt;\n  # select the variables we need:\n  select(Country.territory, Year, Value, Attribute)\n\n\n # preview the data:\n  head(central_america)\n\n  Country.territory Year   Value Attribute\n1            Belize 1961 43.1018    Land_Q\n2            Belize 1961  9.0096   Labor_Q\n3            Belize 1961 24.8566 Capital_Q\n4            Belize 1962 43.1018    Land_Q\n5            Belize 1962  9.7604   Labor_Q\n6            Belize 1962 28.3185 Capital_Q"
  },
  {
    "objectID": "lecture2.html#build-the-graph",
    "href": "lecture2.html#build-the-graph",
    "title": "Lecture 2",
    "section": "Build the graph:",
    "text": "Build the graph:\n\nggplot(data=central_america, aes(x=Year, y = Value)) +\n  geom_point()\n\n\nWhat’s wrong with this?"
  },
  {
    "objectID": "lecture2.html#color-coding-by-country",
    "href": "lecture2.html#color-coding-by-country",
    "title": "Lecture 2",
    "section": "Color coding by country:",
    "text": "Color coding by country:\n\nggplot(data=central_america, aes(x=Year, y = Value, color = Country.territory)) +\n  geom_point()\n\n\nIs this better?"
  },
  {
    "objectID": "lecture2.html#scaling-the-axis",
    "href": "lecture2.html#scaling-the-axis",
    "title": "Lecture 2",
    "section": "Scaling the axis:",
    "text": "Scaling the axis:\n\nggplot(data=central_america, aes(x=Year, y = Value, color = Country.territory)) +\n  scale_y_log10() +\n  geom_point()\n\n\nIs this better?"
  },
  {
    "objectID": "lecture2.html#separate-graph-by-country",
    "href": "lecture2.html#separate-graph-by-country",
    "title": "Lecture 2",
    "section": "Separate graph by country:",
    "text": "Separate graph by country:\n\nggplot(data=central_america, aes(x=Year, y = Value, color = Country.territory)) +\n  scale_y_log10() +\n  facet_wrap(~ Country.territory) +\n  geom_point()"
  },
  {
    "objectID": "lecture2.html#changing-our-color-and-adding-labels",
    "href": "lecture2.html#changing-our-color-and-adding-labels",
    "title": "Lecture 2",
    "section": "Changing our color and adding labels:",
    "text": "Changing our color and adding labels:\n\nggplot(data=central_america, aes(x=Year, y = Value, color = Attribute)) +\n  scale_y_log10() +\n  facet_wrap(~ Country.territory, scales = \"free\") +\n  geom_point() +\n  labs(y = \"Amount (log Thousands USD)\", title = \"Input Components\",\n       color = \"Input Factor\") +\n  scale_color_manual(labels = c(\"Capital\", \"Labor\", \"Land\"),\n                     values = c(\"red\", \"darkgreen\", \"blue\"))"
  },
  {
    "objectID": "lecture2.html#changing-our-color-and-adding-labels-1",
    "href": "lecture2.html#changing-our-color-and-adding-labels-1",
    "title": "Lecture 2",
    "section": "Changing our color and adding labels:",
    "text": "Changing our color and adding labels:\n\nggplot(data=central_america, aes(x=Year, y = Value, color = Country.territory)) +\n  scale_y_log10() +\n  facet_wrap(~ Attribute,\n             labeller = as_labeller(c(\n               \"Capital_Q\" = \"Capital\",\n               \"Labor_Q\" = \"Labor\",\n               \"Land_Q\" = \"Land\"\n             ))) +\n  geom_point() +\n  labs(y = \"Amount (log Thousands USD)\", title = \"Input Components\", color = \"Country\", caption = \"Source: USDA ERS\")"
  },
  {
    "objectID": "lecture2.html#we-are-going-to-make-this-graph",
    "href": "lecture2.html#we-are-going-to-make-this-graph",
    "title": "Lecture 2",
    "section": "We are going to make this graph:",
    "text": "We are going to make this graph:\n\nTake a few minutes and talk to your neighbor about the steps."
  },
  {
    "objectID": "lecture2.html#steps",
    "href": "lecture2.html#steps",
    "title": "Lecture 2",
    "section": "Steps:",
    "text": "Steps:\n\nSelect/filter what we need from the dataset\n\nHint: we may need to use a combo of region and countries to filter on\n\nRecalculate Index\n\nWe are based in 2015 with this data, we want to convert to 1961 base\n\nCreate a base line plot in ggplot\nAdjust the theme parameters to make it look similar\n\nWork with the group next to you to make this graph, we will check in after a few steps"
  },
  {
    "objectID": "lecture2.html#my-rendition",
    "href": "lecture2.html#my-rendition",
    "title": "Lecture 2",
    "section": "My rendition:",
    "text": "My rendition:"
  },
  {
    "objectID": "lecture2.html#recap-1",
    "href": "lecture2.html#recap-1",
    "title": "Lecture 2",
    "section": "Recap:",
    "text": "Recap:\nWhat did we learn today?\n\ndplyr basics:\n\nfilter() → subset rows\n\narrange() → order rows\n\nselect() → choose columns\n\nmutate() → create/transform variables\n\nsummarise() + group_by() → summary statistics by group\n\nTidy data: each variable = column, each observation = row, each value = one cell\nData visualization with ggplot2:\n\nGrammar of Graphics framework (data → aesthetics → geoms → scales → facets → theme)\n\nStart simple, then layer\n\nThemes, labels, and scales make plots more effective\n\nPrinciples of good visualization:\n\nClear, accurate, efficient, consistent, accessible\n\n\n✨ Key takeaway: 80% of your data exploration can be done with these dplyr verbs and ggplot2 basics!"
  },
  {
    "objectID": "lecture1.html#about-me",
    "href": "lecture1.html#about-me",
    "title": "R Math Camp",
    "section": "About me:",
    "text": "About me:\nBradley Katcher \n\n3rd year PhD student at HKS (Econ track)\n\nFrom Cleveland, Ohio\nWorked at the Federal Reserve in Washington, DC\nDid my MPP and MS Data Science at University of Virginia\n\nBig sports fan, enjoy cooking, running, hiking, travel, home brewing, and economics!\nWill be the Teaching Fellow (TF) for API-209 this semester"
  },
  {
    "objectID": "lecture1.html#my-research-assistant",
    "href": "lecture1.html#my-research-assistant",
    "title": "R Math Camp",
    "section": "My Research Assistant:",
    "text": "My Research Assistant:\n\n\nMeet Bee!\nIf we are on a Zoom call, you may hear her in the background. She’s very chatty!\n\n\n\n\nBee"
  },
  {
    "objectID": "lecture1.html#introduce-course-assistants",
    "href": "lecture1.html#introduce-course-assistants",
    "title": "R Math Camp",
    "section": "Introduce Course Assistants:",
    "text": "Introduce Course Assistants:\nCAs, please give:\n\nYour name\nFavorite tip for learning R\nRecommendation of at least one non-academic thing to do this semester in Boston/Cambridge."
  },
  {
    "objectID": "lecture1.html#goals-for-the-course",
    "href": "lecture1.html#goals-for-the-course",
    "title": "R Math Camp",
    "section": "Goals for the course:",
    "text": "Goals for the course:\n\nEnsure that you know enough R to tackle assignments this semester.\n\nWill not teach you everything about coding: this is a public policy program, not a CS course.\nGoal is to bring everyone to a similar playing field!\n\nMay be a little slow for experienced R users\nMay be fast for those of you who have never programmed.\nFeedback is encouraged!\n\n\nKnow how to craft questions and where to look for answers."
  },
  {
    "objectID": "lecture1.html#why-r",
    "href": "lecture1.html#why-r",
    "title": "R Math Camp",
    "section": "Why R?",
    "text": "Why R?\n\nAllows you to connect theory to empirics (data!)\nOpen source, large community, and used by lots of organizations\n\nMore reproducible and systematic than using Excel\n\nI used it when working for the Fed\n\n\nProduces very nice data visualizations"
  },
  {
    "objectID": "lecture1.html#i-dont-want-to-waste-your-time",
    "href": "lecture1.html#i-dont-want-to-waste-your-time",
    "title": "R Math Camp",
    "section": "I don’t want to waste your time:",
    "text": "I don’t want to waste your time:\n\nMany of you have substantial R experience\nThis course might be too fast/slow for some of you\nCan’t force you to be here!\nReasons why you might still want to be, even if you are an experienced user:\n\nGood refresher\nBuild out your GitHub Repo\n\nCan offer a session on this if interested\n\nWill be using exercises that are based on problem sets/exams from API-209"
  },
  {
    "objectID": "lecture1.html#where-to-turn-for-help",
    "href": "lecture1.html#where-to-turn-for-help",
    "title": "R Math Camp",
    "section": "Where to turn for help:",
    "text": "Where to turn for help:\n\nR for Data Science\nPosit Recipes\nGoogle\nChatGPT/AI\nCourse Assistants\nMe!"
  },
  {
    "objectID": "lecture1.html#layout-of-course",
    "href": "lecture1.html#layout-of-course",
    "title": "R Math Camp",
    "section": "Layout of course:",
    "text": "Layout of course:\nWhat are we doing to do during Math Camp (R portion)?\n8 sessions over the next two weeks:\n1. 4 Lessons (2 hours):\n\nI will discuss coding strategies and implementations. Mostly walk-through of examples.\n\n2. Labs (1.5 hours):\n\nA hands-on session where I provide you with a challenge and we solve them together.\nA chance to practice the skills we learn in lessons.\n\n3. Office hours (optional!)"
  },
  {
    "objectID": "lecture1.html#classroom-norms",
    "href": "lecture1.html#classroom-norms",
    "title": "R Math Camp",
    "section": "Classroom Norms:",
    "text": "Classroom Norms:\n\nEveryone deserves the chance to contribute\nStart with curiosity, not judgement\nAcknowledge varying levels of experience\nPractice collaborative problem solving\nAsk questions, often! No such thing as a “dumb question”\nAttempt first, then seek input\nKeep feedback constructive and kind\nStay present and engaged\nUse tools and online resources appropriately\nRespect everyone’s time and energy"
  },
  {
    "objectID": "lecture1.html#ai-for-troubleshooting",
    "href": "lecture1.html#ai-for-troubleshooting",
    "title": "R Math Camp",
    "section": "AI for Troubleshooting:",
    "text": "AI for Troubleshooting:\nTo use AI effectively, consider the following:\n\nShare a clear question with your code + error message\nAsk for help identifying the error\nReview the AI’s suggestion critically and make sure you understand the fix\nAlways test solutions in your own R environment\n\nCite when you use AI for troubleshooting, and any code written by AI should include a comment by you describing which AI you used and what the code does in your own words."
  },
  {
    "objectID": "lecture1.html#dont-let-ai-do-the-thinking-for-you",
    "href": "lecture1.html#dont-let-ai-do-the-thinking-for-you",
    "title": "R Math Camp",
    "section": "Don’t let AI do the thinking for you:",
    "text": "Don’t let AI do the thinking for you:\nAI gives answers, but you need a deeper understanding.\n\nYou can’t debug or adapt code you don’t understand.\n\nKnowing how matters more than getting a quick fix.\n\n\nAI isn’t always correct:\n\nMakes up functions\nSuggests outdated/inefficient code\nDoesn’t know dataset or context"
  },
  {
    "objectID": "lecture1.html#outline",
    "href": "lecture1.html#outline",
    "title": "R Math Camp",
    "section": "Outline:",
    "text": "Outline:\n\nLesson 1: Welcome, overview, dplyr\n\nLab 1: Working with a dataset on how to compute summary stats, basic data analysis\n\n\n\n\nLesson 2: Installing R, Tidyerse, ggplot, working with other packages\n\nLab 2: Tidy Data and Visualization in R using packages\n\n\n\n\n\nLesson 3: Writing your own functions, Quarto\n\nLab 3: Writing functions to calculate some statistics\n\n\n\n\n\nLesson 4: Data wrangling with multiple datasets, merging and integrating multiple data sources\n\nLab 4: Exercise based on first half of problem set 1"
  },
  {
    "objectID": "lecture1.html#goals-for-today",
    "href": "lecture1.html#goals-for-today",
    "title": "R Math Camp",
    "section": "Goals for today:",
    "text": "Goals for today:\n\n\nLearn how to import data and do basic data manipulation and cleaning.\n\n\n\n\nWork with a real dataset, understanding code book and documentation\n\n\n\n\nLearn key components of the tidyverse.\n\n\n\n\nUnderstanding data cleaning and data wrangling."
  },
  {
    "objectID": "lecture1.html#steps-to-working-with-data-in-r",
    "href": "lecture1.html#steps-to-working-with-data-in-r",
    "title": "R Math Camp",
    "section": "Steps to working with data in R:",
    "text": "Steps to working with data in R:\n1. Import (read.csv()/read_csv() is your friend)\n\n2. Tidy (dplyr and stringr are your friends)\n\n\n3. Transform the data (tidyverse is your friend)\n\n\n4. Visualize the data (ggplot is your friend)\n\n\n5. Communicate the data (quarto is your friend)"
  },
  {
    "objectID": "lecture1.html#structure-of-an-r-file",
    "href": "lecture1.html#structure-of-an-r-file",
    "title": "R Math Camp",
    "section": "Structure of an R file:",
    "text": "Structure of an R file:\nWe begin by writing a preamble and loading in packages:\n\n# filename.do\n# Author: Bradley Katcher\n# Date: \n# Purpose: \n# Description:\n\n\n# packages:\n# to install packages, we use the following function:\n#install.packages('dplyr') # you only need to do this once\nlibrary(dplyr) # this calls the package, you need to do this every time\n\n# storing key variables:\n\n\n\n# begin analysis"
  },
  {
    "objectID": "lecture1.html#reading-in-data",
    "href": "lecture1.html#reading-in-data",
    "title": "R Math Camp",
    "section": "Reading in data:",
    "text": "Reading in data:\nIdeally most data that you get will be in csv (delimited) format.\n\nYou had experience reading in csv files in the summer work using the read_csv() command.\n\nFor today’s exercise, we are going to work with a dataset on the global diffusion of latent nuclear capabilities, produced by Matthew Fuhrmann:\nCheck out his website here with codebook."
  },
  {
    "objectID": "lecture1.html#reading-in-data-1",
    "href": "lecture1.html#reading-in-data-1",
    "title": "R Math Camp",
    "section": "Reading in data:",
    "text": "Reading in data:\nIt looks like this dataset is in xlsx format. To read that in, we will 1. Install the openxlsx package 2. Call the openxlsx package 3. Read in the dataset\n\nThere are multiple ways to do this. For example, you could download the file and use the readxl package.\nYou can load multiple datasets into R.\n\n\n#install.packages('openxlsx')\nlibrary(openxlsx)\n\nfull_nuclear_data &lt;- read.xlsx('http://www.matthewfuhrmann.com/uploads/2/5/8/2/25820564/nl_dataset_v.1.2.xlsx')\n\nnuclear_country_year &lt;- read.xlsx('http://www.matthewfuhrmann.com/uploads/2/5/8/2/25820564/country-year_dataset.xlsx')"
  },
  {
    "objectID": "lecture1.html#preview-the-data",
    "href": "lecture1.html#preview-the-data",
    "title": "R Math Camp",
    "section": "Preview the data",
    "text": "Preview the data\n\nlibrary(dplyr)\n\n# Look at the full data:\nhead(full_nuclear_data)\n\n  country_name ccode                        facility_name facility_ambiguity\n1      Algeria   615     Hot cell facility at Ain Oussera                  0\n2    Argentina   160    Ezeiza – SF Reprocessing Facility                  0\n3    Argentina   160 Ezeiza II – SF Reprocessing Facility                -77\n4    Argentina   160     Pilcaniyeu Enrichment Facility I                  0\n5    Argentina   160    Pilcaniyeu Enrichment Facility II                -77\n6    Australia   900                        Lucas Heights                  0\n  enr_type size construction_start construction_end operation_start\n1        1    1               1986             1992            1992\n2        1    1               1968             1968            1968\n3        1    2               1978             1990            9999\n4        2    2               1979             1987            1987\n5        2    2               2000             9999            9999\n6        3    1               1965             1972            1972\n  operation_end operation2_start operation2_end covert iaea regional military\n1          7777               NA             NA      1    1        0        0\n2          1973               NA             NA      0    0        0        0\n3          9999               NA             NA      0    0        1        0\n4          1994               NA             NA      1    0        1        1\n5          9999               NA             NA      0    1        1        0\n6          1983               NA             NA      0    1        0        0\n  military_ambiguity multinational foreign_assistance\n1                  1             0                  1\n2                  1             0                  0\n3                  0             0                  0\n4                  0             0                  0\n5                  0             0                  0\n6                  1             0                  0\n  foreign_assistance_ambiguity\n1                            0\n2                            1\n3                            1\n4                            1\n5                            1\n6                            0"
  },
  {
    "objectID": "lecture1.html#preview-the-data-1",
    "href": "lecture1.html#preview-the-data-1",
    "title": "R Math Camp",
    "section": "Preview the data:",
    "text": "Preview the data:\n\nglimpse(full_nuclear_data)\n\nRows: 253\nColumns: 20\n$ country_name                 &lt;chr&gt; \"Algeria\", \"Argentina\", \"Argentina\", \"Arg…\n$ ccode                        &lt;dbl&gt; 615, 160, 160, 160, 160, 900, 900, 211, 1…\n$ facility_name                &lt;chr&gt; \"Hot cell facility at Ain Oussera\", \"Ezei…\n$ facility_ambiguity           &lt;dbl&gt; 0, 0, -77, 0, -77, 0, 0, 0, 0, 0, 0, 0, 0…\n$ enr_type                     &lt;dbl&gt; 1, 1, 1, 2, 2, 3, 7, 1, 7, 3, 3, 3, 6, 1,…\n$ size                         &lt;dbl&gt; 1, 1, 2, 2, 2, 1, 1, 2, 1, 2, 1, 3, 2, 1,…\n$ construction_start           &lt;dbl&gt; 1986, 1968, 1978, 1979, 2000, 1965, 1982,…\n$ construction_end             &lt;dbl&gt; 1992, 1968, 1990, 1987, 9999, 1972, 1992,…\n$ operation_start              &lt;dbl&gt; 1992, 1968, 9999, 1987, 9999, 1972, 1992,…\n$ operation_end                &lt;dbl&gt; 7777, 1973, 9999, 1994, 9999, 1983, 2007,…\n$ operation2_start             &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ operation2_end               &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ covert                       &lt;dbl&gt; 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1,…\n$ iaea                         &lt;dbl&gt; 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0,…\n$ regional                     &lt;dbl&gt; 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0,…\n$ military                     &lt;dbl&gt; 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1,…\n$ military_ambiguity           &lt;dbl&gt; 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0,…\n$ multinational                &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0,…\n$ foreign_assistance           &lt;dbl&gt; 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0,…\n$ foreign_assistance_ambiguity &lt;dbl&gt; 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1,…\n\n# can also use: full_nuclear_data |&gt; glimpse()"
  },
  {
    "objectID": "lecture1.html#preview-the-data-2",
    "href": "lecture1.html#preview-the-data-2",
    "title": "R Math Camp",
    "section": "Preview the data:",
    "text": "Preview the data:\n\n# Look at the limited data:\nhead(nuclear_country_year)\n\n  stateabb ccode year latency_lab latency_pilot\n1      USA     2 1939           0             0\n2      USA     2 1940           0             0\n3      USA     2 1941           1             0\n4      USA     2 1942           1             0\n5      USA     2 1943           1             1\n6      USA     2 1944           1             1\n\nglimpse(nuclear_country_year)\n\nRows: 10,147\nColumns: 5\n$ stateabb      &lt;chr&gt; \"USA\", \"USA\", \"USA\", \"USA\", \"USA\", \"USA\", \"USA\", \"USA\", …\n$ ccode         &lt;dbl&gt; 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,…\n$ year          &lt;dbl&gt; 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 19…\n$ latency_lab   &lt;dbl&gt; 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ latency_pilot &lt;dbl&gt; 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…"
  },
  {
    "objectID": "lecture1.html#data-manipulation-and-wrangling",
    "href": "lecture1.html#data-manipulation-and-wrangling",
    "title": "R Math Camp",
    "section": "Data Manipulation and Wrangling:",
    "text": "Data Manipulation and Wrangling:\n\n\nData manipulation:\n\nFocus is changing data structure\nUses specific methods/functions\nWorks with structured data\nEx: sorting, filtering, aggregating\nPart of data wrangling\n\n\nData wrangling:\n\nBroader process with cleaning and transformations\nStructured and unstructured data\nMissing values, multiple datasets, format conversion\nMore time intensive"
  },
  {
    "objectID": "lecture1.html#more-advanced-data-wrangling",
    "href": "lecture1.html#more-advanced-data-wrangling",
    "title": "R Math Camp",
    "section": "More advanced data wrangling:",
    "text": "More advanced data wrangling:\n\nAdvanced filtering and selection: Conditional filtering and dynamic column selection\nComplex mutate operations: Creating conditional columns using lags and leads\nData reshaping: pivoting data, advanced grouping\nEfficient data handling: joining datasets, parallel processing"
  },
  {
    "objectID": "lecture1.html#key-packages",
    "href": "lecture1.html#key-packages",
    "title": "R Math Camp",
    "section": "Key Packages:",
    "text": "Key Packages:\nThese are tidyverse R packages that are used for data science, which share a common design philosophy, grammar, and data structures:\n\nggplot2: data visualization\ndplyr: data manipulation\ntidyr: data tidying\nreadr: data import\npurrr: functional programming\ntibble: modern data frames\nstringr: string manipulation\nforcats: categorical data"
  },
  {
    "objectID": "lecture1.html#most-commonly-used-dplyr-functions",
    "href": "lecture1.html#most-commonly-used-dplyr-functions",
    "title": "R Math Camp",
    "section": "Most commonly used dplyr functions:",
    "text": "Most commonly used dplyr functions:\n\nfilter(): subset rows based on conditions\n\n\n\nselect(): choose columns by name\n\n\n\n\nmutate(): create new columns or modify existing ones\n\ncommonly used with if_else() or case_when()\n\n\n\n\n\narrange(): reorder rows\n\n\n\n\ngroup_by(): group data for summary operations\n\n\n\n\nsummarize(): aggregate data"
  },
  {
    "objectID": "lecture1.html#return-to-the-data",
    "href": "lecture1.html#return-to-the-data",
    "title": "R Math Camp",
    "section": "Return to the data:",
    "text": "Return to the data:\nCleaning the data. If names were not clean, then we would clean the names, which you could do using the following:\n\nlibrary(janitor)\nhead(nuclear_country_year)\n\n  stateabb ccode year latency_lab latency_pilot\n1      USA     2 1939           0             0\n2      USA     2 1940           0             0\n3      USA     2 1941           1             0\n4      USA     2 1942           1             0\n5      USA     2 1943           1             1\n6      USA     2 1944           1             1\n\nhead(clean_names(nuclear_country_year))\n\n  stateabb ccode year latency_lab latency_pilot\n1      USA     2 1939           0             0\n2      USA     2 1940           0             0\n3      USA     2 1941           1             0\n4      USA     2 1942           1             0\n5      USA     2 1943           1             1\n6      USA     2 1944           1             1"
  },
  {
    "objectID": "lecture1.html#cleaning-a-few-things",
    "href": "lecture1.html#cleaning-a-few-things",
    "title": "R Math Camp",
    "section": "Cleaning a few things:",
    "text": "Cleaning a few things:\nThe codebook tells us that for many of the variables, there are values that are put in to signify missing values or non-operational facilities.\n\nIt is very important to read through the codebook and look at summary stats of the data:\n\n\nsummary(full_nuclear_data)\n\n country_name           ccode       facility_name      facility_ambiguity\n Length:253         Min.   :  2.0   Length:253         Min.   :-77.000   \n Class :character   1st Qu.:200.0   Class :character   1st Qu.:  0.000   \n Mode  :character   Median :360.0   Mode  :character   Median :  0.000   \n                    Mean   :371.7                      Mean   : -3.474   \n                    3rd Qu.:645.0                      3rd Qu.:  0.000   \n                    Max.   :900.0                      Max.   :  1.000   \n                                                                         \n    enr_type          size      construction_start construction_end\n Min.   :1.000   Min.   :1.00   Min.   : -99       Min.   : -99    \n 1st Qu.:1.000   1st Qu.:1.00   1st Qu.:1943       1st Qu.:1954    \n Median :2.000   Median :2.00   Median :1960       Median :1973    \n Mean   :2.621   Mean   :2.02   Mean   :1513       Mean   :2081    \n 3rd Qu.:3.000   3rd Qu.:3.00   3rd Qu.:1982       3rd Qu.:1988    \n Max.   :8.000   Max.   :3.00   Max.   :2012       Max.   :9999    \n                                                                   \n operation_start operation_end  operation2_start operation2_end\n Min.   : -99    Min.   : -99   Min.   :1969     Min.   :1972  \n 1st Qu.:1956    1st Qu.:1978   1st Qu.:1981     1st Qu.:1988  \n Median :1974    Median :1993   Median :1983     Median :2004  \n Mean   :2328    Mean   :3993   Mean   :1988     Mean   :3919  \n 3rd Qu.:1988    3rd Qu.:7777   3rd Qu.:1996     3rd Qu.:7777  \n Max.   :9999    Max.   :9999   Max.   :2011     Max.   :7777  \n                                NA's   :244      NA's   :244   \n     covert              iaea            regional           military       \n Min.   :-99.0000   Min.   :-99.000   Min.   :-99.0000   Min.   :-99.0000  \n 1st Qu.:  0.0000   1st Qu.:  0.000   1st Qu.:  0.0000   1st Qu.:  0.0000  \n Median :  1.0000   Median :  0.000   Median :  0.0000   Median :  1.0000  \n Mean   : -0.2609   Mean   : -1.617   Mean   : -0.6087   Mean   : -0.9565  \n 3rd Qu.:  1.0000   3rd Qu.:  1.000   3rd Qu.:  0.0000   3rd Qu.:  1.0000  \n Max.   :  1.0000   Max.   :  1.000   Max.   :  1.0000   Max.   :  1.0000  \n                                                                           \n military_ambiguity multinational     foreign_assistance\n Min.   :0.0000     Min.   :0.00000   Min.   :-99.0000  \n 1st Qu.:0.0000     1st Qu.:0.00000   1st Qu.:  0.0000  \n Median :0.0000     Median :0.00000   Median :  0.0000  \n Mean   :0.1897     Mean   :0.09091   Mean   : -0.1146  \n 3rd Qu.:0.0000     3rd Qu.:0.00000   3rd Qu.:  1.0000  \n Max.   :1.0000     Max.   :1.00000   Max.   :  1.0000  \n                                                        \n foreign_assistance_ambiguity\n Min.   :0.0000              \n 1st Qu.:0.0000              \n Median :0.0000              \n Mean   :0.1028              \n 3rd Qu.:0.0000              \n Max.   :1.0000"
  },
  {
    "objectID": "lecture1.html#just-looking-at-specific-variables",
    "href": "lecture1.html#just-looking-at-specific-variables",
    "title": "R Math Camp",
    "section": "Just looking at specific variables:",
    "text": "Just looking at specific variables:\n\n# just look at one variable:\nsummary(full_nuclear_data$military)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-99.0000   0.0000   1.0000  -0.9565   1.0000   1.0000 \n\n# look at multiple variables:\nsummary(full_nuclear_data |&gt; select(military, size))\n\n    military             size     \n Min.   :-99.0000   Min.   :1.00  \n 1st Qu.:  0.0000   1st Qu.:1.00  \n Median :  1.0000   Median :2.00  \n Mean   : -0.9565   Mean   :2.02  \n 3rd Qu.:  1.0000   3rd Qu.:3.00  \n Max.   :  1.0000   Max.   :3.00"
  },
  {
    "objectID": "lecture1.html#tabulating-and-cross-tabbing-the-data",
    "href": "lecture1.html#tabulating-and-cross-tabbing-the-data",
    "title": "R Math Camp",
    "section": "Tabulating and Cross-Tabbing the data:",
    "text": "Tabulating and Cross-Tabbing the data:\n\n# tabulate technology employed at nuclear plant:\ntable(full_nuclear_data$enr_type)\n\n\n  1   2   3   4   5   6   7   8 \n112  26  67   7   7   7  23   4 \n\n# cross-table of technology employed based on civilian/military status:\ntable(full_nuclear_data$enr_type, full_nuclear_data$military)\n\n   \n    -99  0  1\n  1   2 44 66\n  2   0  2 24\n  3   2 27 38\n  4   0  0  7\n  5   0  2  5\n  6   0  5  2\n  7   0 15  8\n  8   0  0  4"
  },
  {
    "objectID": "lecture1.html#question-1-what-share-of-nuclear-and-plants-in-europe-are-military-as-opposed-to-civilian-what-share-broken-out-by-technology-type",
    "href": "lecture1.html#question-1-what-share-of-nuclear-and-plants-in-europe-are-military-as-opposed-to-civilian-what-share-broken-out-by-technology-type",
    "title": "R Math Camp",
    "section": "Question 1: What share of nuclear and plants in Europe are military as opposed to civilian? What share broken out by technology type?",
    "text": "Question 1: What share of nuclear and plants in Europe are military as opposed to civilian? What share broken out by technology type?\nWhat do we need to do?\n\n\nFilter to the countries of interest\nSelect the variables that are important to us\nHandle missing/make sure the data is clean\nGroup by technology type/military status\nSummarize"
  },
  {
    "objectID": "lecture1.html#look-at-the-countries",
    "href": "lecture1.html#look-at-the-countries",
    "title": "R Math Camp",
    "section": "Look at the countries:",
    "text": "Look at the countries:\n\ntable(full_nuclear_data$country_name)\n\n\n       Algeria      Argentina      Australia        Belgium         Brazil \n             1              4              2              1              7 \n        Canada          China Czech Republic          Egypt         France \n             3             18              1              1             24 \n       Germany          India           Iran           Iraq         Israel \n             8             10             10              9              4 \n         Italy          Japan          Libya    Netherlands    North Korea \n             4              9              3              5              3 \n        Norway       Pakistan        Romania         Russia   South Africa \n             2              8              1             32              5 \n   South Korea          Spain         Sweden         Taiwan United Kingdom \n             4              1              2              3             20 \n United States     Yugoslavia \n            44              4 \n\n\n\n# select just European countries:\neurope_nuclear_data &lt;- full_nuclear_data |&gt; \n  filter(country_name %in% \n           c(\"Belgium\", \"Czech Republic\", \"France\", \"Germany\",\n             \"Italy\", \"Netherlands\", \"Norway\", \"Romania\",\n             \"Spain\", \"Sweden\", \"United Kingdom\", \"Yugoslavia\"))"
  },
  {
    "objectID": "lecture1.html#limit-to-the-variables-we-need",
    "href": "lecture1.html#limit-to-the-variables-we-need",
    "title": "R Math Camp",
    "section": "Limit to the variables we need:",
    "text": "Limit to the variables we need:\n\n# subset to the variables that we need:\neurope_nuclear_data &lt;- europe_nuclear_data |&gt; \n  select(country_name, enr_type, military)\n\n# get summary stats of the dataframe:\nsummary(europe_nuclear_data)\n\n country_name          enr_type        military      \n Length:73          Min.   :1.000   Min.   :-99.000  \n Class :character   1st Qu.:1.000   1st Qu.:  0.000  \n Mode  :character   Median :1.000   Median :  0.000  \n                    Mean   :2.082   Mean   : -2.301  \n                    3rd Qu.:3.000   3rd Qu.:  1.000  \n                    Max.   :7.000   Max.   :  1.000"
  },
  {
    "objectID": "lecture1.html#look-at-military",
    "href": "lecture1.html#look-at-military",
    "title": "R Math Camp",
    "section": "Look at military:",
    "text": "Look at military:\nWe see that the share of military is negative if we look at summary stats. If we wanted to figure out the share that are military, right now, it wouldn’t make any sense.\n\n# recode the missing observaitons:\nmilitary_summary_data &lt;- europe_nuclear_data |&gt; \n  # recode the missing military to be NA\n  mutate(military = if_else(military == -99, NA, military))\n\n# look at the result:\nmean(military_summary_data$military)\n\n[1] NA\n\n\nWhy didn’t this work? We need to remove NAs:\n\nmean(military_summary_data$military, na.rm = T)\n\n[1] 0.4225352"
  },
  {
    "objectID": "lecture1.html#putting-it-all-together",
    "href": "lecture1.html#putting-it-all-together",
    "title": "R Math Camp",
    "section": "Putting it all together",
    "text": "Putting it all together\nHow many military and civilian nuclear plants are there by power type?\n\n# compute the number and share of military plants by power type\neurope_power_type &lt;- europe_nuclear_data |&gt;\n  # recode the missing to be NA:\n  mutate(military = if_else(military == -99, NA, military)) |&gt;\n  # remove the missings:\n  filter(!is.na(military)) %&gt;%\n  #group by power type:\n  group_by(enr_type) %&gt;%\n  # summarise the share of military\n  summarise(military = mean(military), # the share of plants that are military\n            n_plants = n()) # the total number of plants by type\n\n# look at the data:\neurope_power_type\n\n# A tibble: 7 × 3\n  enr_type military n_plants\n     &lt;dbl&gt;    &lt;dbl&gt;    &lt;int&gt;\n1        1   0.455        44\n2        2   0.667         3\n3        3   0.0769       13\n4        4   1             2\n5        5   1             4\n6        6   0             2\n7        7   0.333         3"
  },
  {
    "objectID": "lecture1.html#make-it-look-a-little-cleaner",
    "href": "lecture1.html#make-it-look-a-little-cleaner",
    "title": "R Math Camp",
    "section": "Make it look a little cleaner:",
    "text": "Make it look a little cleaner:\n\n# add strings to teh pwoer type\neurope_power_type  &lt;- europe_power_type |&gt;\n  # create a variable with the name as a string instead of a number\n  mutate(power_type = case_when(\n         enr_type == 1 ~ \"Reprocessing\",\n         enr_type == 2 ~ \"Gaseous diffusion\",\n         enr_type == 3 ~ \"Centrifuge\",\n         enr_type == 4 ~ \"EMIS\",\n         enr_type == 5 ~ \"Chemical & ion exchange\",\n         enr_type == 6 ~ \"Aerodynamic isotope separation\",\n         enr_type == 7 ~ \"Laser\",\n         enr_type == 8 ~ \"Thermal diffusion\")) |&gt;\n  # remove the number\n  select(-enr_type) |&gt;\n  # sort by the number of plants (descending)\n  arrange(-n_plants) |&gt;\n  # make sure that power_type is the first variable:\n  select(power_type, everything())\n\n# look at the results:\neurope_power_type\n\n# A tibble: 7 × 3\n  power_type                     military n_plants\n  &lt;chr&gt;                             &lt;dbl&gt;    &lt;int&gt;\n1 Reprocessing                     0.455        44\n2 Centrifuge                       0.0769       13\n3 Chemical & ion exchange          1             4\n4 Gaseous diffusion                0.667         3\n5 Laser                            0.333         3\n6 EMIS                             1             2\n7 Aerodynamic isotope separation   0             2"
  },
  {
    "objectID": "lecture1.html#recap",
    "href": "lecture1.html#recap",
    "title": "R Math Camp",
    "section": "Recap:",
    "text": "Recap:\nWhat have we done today?\n\nStarted to get familiar with R\nLearned about good coding practices\nPreviewed the tidyverse\nWork through a practice exercise\n\nComment early and often!"
  },
  {
    "objectID": "lecture1.html#install-r-on-your-machine",
    "href": "lecture1.html#install-r-on-your-machine",
    "title": "R Math Camp",
    "section": "Install R on Your Machine",
    "text": "Install R on Your Machine\nPlease attempt this prior to the start of next lecture. If you successfully install R and RStudio without any issues, feel free to arrive at 9:15am on Thursday to allow us time to help other students\nTo install R, you should install both R and RStudio. To download and install R, you should click the following:\nDownload and Install R\n\nOnce you get to this website, click the “Download R for macOS” or “Download R for Windows” depending on your machine.\nTo get the R Studio interface, you can click on the same link as above and then click “Download RStudio Desktop.”\n\nIf you would like step by step instructions, you can do so here.\nPlease tell the teaching team if you need assistance!"
  }
]